# https://taskfile.dev

version: '3'

env:
  DOCKER_REGISTRY: '{{default "localhost" .DOCKER_REGISTRY}}'
  DOCKER_IMAGE_NAME: '{{default "terraform-with-terragrunt" .DOCKER_IMAGE_NAME}}'

tasks:
  build:
    cmds:
      - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest .
      - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest

  run-image:
    cmds:
      - docker run -it -v `pwd`:/mnt -w="/mnt" -v ~/.aws/:/root/.aws/ -e AWS_PROFILE -e TF_VAR_kubernetes_cluster_ca_certificate -e TF_VAR_datadog_api_key -e TF_VAR_datadog_app_key --user=root --rm $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest

  format-all:
    cmds:
      - terragrunt hclfmt
      - terraform fmt -recursive

  clean-all:
    cmds:
      - find . -type d -name ".terragrunt-cache" -prune -exec rm -rf {} \;
      - find . -type d -name ".terraform" -prune -prune -exec rm -rf {} \;
      - find . -type f -name "terraform.tfstate*" -prune -exec rm -rf {} \;

  plan-sequential:
    deps: [clean-all]
    cmds:
      - find {{.MY_TERRAGRUNT_WORKING_DIR}} -type f -name "terragrunt.hcl" -prune -exec sh -c 'echo "#####\n$(dirname "{}")\n#####\n"; terragrunt plan --terragrunt-non-interactive --terragrunt-working-dir $(dirname "{}") ' \;

  apply-sequential:
    deps: [clean-all]
    cmds:
      - find {{.MY_TERRAGRUNT_WORKING_DIR}} -type f -name "terragrunt.hcl" -prune -exec sh -c 'echo "#####\n$(dirname "{}")\n#####\n"; terragrunt apply -auto-approve --terragrunt-non-interactive --terragrunt-working-dir $(dirname "{}") 2>/dev/null' \;
